# Configuration file that uses the Splunk exporters (SAPM, SignalFx) to push
# data to Splunk products.

extensions:
  health_check:
    endpoint: "${SPLUNK_LISTEN_INTERFACE}:13133"
  http_forwarder:
    ingress:
      endpoint: "${SPLUNK_LISTEN_INTERFACE}:6060"
    egress:
      endpoint: "https://api.${SPLUNK_REALM}.signalfx.com"
  zpages:
    endpoint: "${SPLUNK_LISTEN_INTERFACE}:55679"
  memory_ballast:
    # In general, the ballast should be set to 1/3 of the collector's memory, the limit
    # should be 90% of the collector's memory.
    # The simplest way to specify the ballast size is set the value of SPLUNK_BALLAST_SIZE_MIB env variable.
    size_mib: ${SPLUNK_BALLAST_SIZE_MIB}

receivers:
  jaeger:
    protocols:
      grpc:
        endpoint: "${SPLUNK_LISTEN_INTERFACE}:14250"
      thrift_binary:
        endpoint: "${SPLUNK_LISTEN_INTERFACE}:6832"
      thrift_compact:
        endpoint: "${SPLUNK_LISTEN_INTERFACE}:6831"
      thrift_http:
        endpoint: "${SPLUNK_LISTEN_INTERFACE}:14268"
  otlp:
    protocols:
      grpc:
        endpoint: "${SPLUNK_LISTEN_INTERFACE}:4317"
      http:
        endpoint: "${SPLUNK_LISTEN_INTERFACE}:4318"
  # This section is used to collect the OpenTelemetry Collector metrics
  # Even if just a Splunk APM customer, these metrics are included
  prometheus/internal:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 10s
        static_configs:
        - targets: ['0.0.0.0:8888']
        metric_relabel_configs:
          - source_labels: [ __name__ ]
            regex: '.*grpc_io.*'
            action: drop
  sapm:
    endpoint: "${SPLUNK_LISTEN_INTERFACE}:7276"
    # Whether to preserve incoming access token and use instead of exporter token
    # default = false
    #access_token_passthrough: true
  signalfx/a:
    endpoint: "${SPLUNK_LISTEN_INTERFACE}:9944"
    access_token_passthrough: true
  signalfx/b:
    endpoint: "${SPLUNK_LISTEN_INTERFACE}:9945"
    access_token_passthrough: true
  signalfx/c:
    endpoint: "${SPLUNK_LISTEN_INTERFACE}:9946"
    access_token_passthrough: true

  zipkin:
    endpoint: "${SPLUNK_LISTEN_INTERFACE}:9411"

processors:
  batch:
  # Enabling the memory_limiter is strongly recommended for every pipeline.
  # Configuration is based on the amount of memory allocated to the collector.
  # For more information about memory limiter, see
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/memorylimiter/README.md
  memory_limiter:
    check_interval: 2s
    limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}

  # Optional: The following processor can be used to add a default "deployment.environment" attribute to the traces
  # when it's not populated by instrumentation libraries.
  # If enabled, make sure to enable this processor in the pipeline below.
  #resource/add_environment:
    #attributes:
      #- action: insert
        #value: staging/production/...
        #key: deployment.environment

  attributes/tokena:
    actions:
      - key: token
        value: tokena
        action: insert
  attributes/tokenb:
    actions:
      - key: token
        value: tokenb
        action: insert
  attributes/tokenc:
    actions:
      - key: token
        value: tokenc
        action: insert

  # Detect if the collector is running on a cloud system. Overrides resource attributes set by receivers.
  # Detector order is important: the `system` detector goes last so it can't preclude cloud detectors from setting host/os info.
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourcedetectionprocessor#ordering
  resourcedetection/internal:
    detectors: [gcp, ecs, ec2, azure, system]
    override: true

exporters:
  # Metrics + Events
  signalfx:
    realm: "${SPLUNK_REALM}"
    api_url: "${SPLUNK_API_URL}"
    ingest_url: "${SPLUNK_INGEST_URL}"
    sending_queue:
      num_consumers: 32
    access_token: "${SPLUNK_ACCESS_TOKEN}"
    ## Uncomment below if your agents are sending via signalfx exporter
    ## to avoid double translations and exclusions.
    #translation_rules: []
    #exclude_metrics: []

service:
  telemetry:
    metrics:
      address: "${SPLUNK_LISTEN_INTERFACE}:8888"
  extensions: [health_check, http_forwarder, zpages, memory_ballast]
  pipelines:
    metrics/a:
      receivers: [otlp, signalfx/a]
      processors: [attributes/tokena, memory_limiter, batch]
      exporters: [signalfx]
    metrics/b:
      receivers: [otlp, signalfx/b]
      processors: [attributes/tokenb, memory_limiter, batch]
      exporters: [signalfx]
    metrics/c:
      receivers: [otlp, signalfx/c]
      processors: [attributes/tokenc, memory_limiter, batch]
      exporters: [signalfx]

